function loss = airspeed_control_loss(airspeed_pid_params)
% This function computes a loss for a given set of airspeed control
% parameters. The loss is computed as the sum of the losses for different echelon
% inputs and different parameters
import controlOptim.controler_loss
import controlOptim.airspeed_control_test

initial_airspeed1 = 100; %m/s
initial_airspeed2 = 240; %m/s

initial_altitude = 5000;
initial_mass1 = 5200; %Empty mass : 2790kg, MTOW : 5669kg
initial_mass2 = 3400; %Empty mass : 2790kg, MTOW : 5669kg
target_airspeed1 = 120;
target_airspeed2 = 200;

t_end=20;
target_airspeed_hist1 = [initial_airspeed1*ones(1/0.05, 1); target_airspeed1*ones((t_end-1)/0.05+1, 1)];
target_airspeed_hist2 = [initial_airspeed2*ones(1/0.05, 1); target_airspeed2*ones((t_end-1)/0.05+1, 1)];

t_idx_change = 1/0.05+1;
overshooting_coef=10; % loss=10 for 100% overshoot
rising_coef=0.002; % loss=10 for 2.5s to reach 63% of the command
settling_coef=0.05; % loss=10 for 10s to settle in the 5% intervall
command_speed_coef=800; % loss=10 for a maximum target speed of gamma of 25%Trottle/s
command_oscillation_coef=10; % loss=10 if the command ranges 3 times the
% difference between its max and min

[x_hist1, u_hist1, intermediary_terms_hist1, usefullvar_list1] = airspeed_control_test(...
    airspeed_pid_params, initial_airspeed1, ...
    initial_altitude, initial_mass1, target_airspeed1, true, true, false);
loss1 = controler_loss(target_airspeed_hist1, ...
    u_hist1(:,4),  usefullvar_list1(:,11), ...
    t_idx_change, overshooting_coef, rising_coef, settling_coef, ...
    command_speed_coef, command_oscillation_coef);

[x_hist2, u_hist2, intermediary_terms_hist2, usefullvar_list2] = airspeed_control_test(...
    airspeed_pid_params, initial_airspeed2, ...
    initial_altitude, initial_mass1, target_airspeed2, false, true, false);
loss2 = controler_loss(target_airspeed_hist2, ...
    u_hist2(:,4),  usefullvar_list2(:,11), ...
    t_idx_change, overshooting_coef, rising_coef, settling_coef, ...
    command_speed_coef, command_oscillation_coef);

[x_hist3, u_hist3, intermediary_terms_hist3, usefullvar_list3] = airspeed_control_test(...
    airspeed_pid_params, initial_airspeed1, ...
    initial_altitude, initial_mass2, target_airspeed1, true, true, false);
loss3 = controler_loss(target_airspeed_hist1, ...
    u_hist3(:,4),  usefullvar_list3(:,11), ...
    t_idx_change, overshooting_coef, rising_coef, settling_coef, ...
    command_speed_coef, command_oscillation_coef);

[x_hist4, u_hist4, intermediary_terms_hist4, usefullvar_list4] = airspeed_control_test(...
    airspeed_pid_params, initial_airspeed2, ...
    initial_altitude, initial_mass2, target_airspeed2, false, true, false);
loss4 = controler_loss(target_airspeed_hist2, ...
    u_hist4(:,4),  usefullvar_list4(:,11), ...
    t_idx_change, overshooting_coef, rising_coef, settling_coef, ...
    command_speed_coef, command_oscillation_coef);
loss = loss1 + loss2 + loss3 + loss4;
end

